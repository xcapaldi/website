#+TITLE: ImageJ/FIJI plugins for background subtraction and stack operations
#+AUTHOR: Xavier Capaldi
#+DATE: [2020-01-27 Mon]
#+INDEX: code

[[https://fiji.sc/][Fiji]] is a extended distribution of the open source [[https://imagej.net/Welcome][ImageJ]] platform for scientific image analysis.
It is an excellent tool for working with microscopy data.
While the tool is written in Java, it is highly extensible through scripts which can be written in a variety of languages.

* Background subtraction
I wrote a python/jython plugin implements an algorithm developed by Patrick Doyle's group at MIT.
It performs a two-stage background removal on fluorescent microscopy data, particularly that of DNA.
The algorithm is detailed (with small errors) in the supplementary information for the following journal article:

Revisiting the Conformation and Dynamics of DNA in Slitlike Confinement Jing Tang, Stephen L. Levy, Daniel W. Trahan, Jeremy J. Jones, Harold G. Craighead, and Patrick S. Doyle Macromolecules 2010 43 (17), 7368-7377 DOI: 10.1021/ma101157x

If you use this plugin to analyze data for publication, please cite this paper.

#+CAPTION: Examples of background subtraction on single-channel data (λ-DNA stained with YOYO-1) [top] and two-channel data (two differentially stained λ-DNA with YOYO-1 and YOYO-3) [bottom].
[[file:background-subtract.jpg]]

** Algorithm
The algorithm itself has two steps.
I've modified (corrected?) it from the original in the supplementary information.
Be aware that the resulting image will be smaller by four pixels in both width and height due to the nature of the subtraction algorithm. 

*** Initial subtraction
The mean intensity of the pixels along the boundary of the image is subtracted from all the pixels in the image.
In addition, the sample standard deviation (σ) of the boundary pixels is calculated.

*** Individual noise spot removal
We iterate through each pixel of the image.
The mean intensity of 8 pixels surrounding the target pixel in a 3x3 region is calculated.
The mean intensity of 16 pixels surrounding the target pixel in a 5x5 region is calculated.
If either mean intensities are less than three times the sample standard deviation (sigma), the pixel is taken to be noise and set to an intensity of 0.

* Multi-crop utilities
I also wrote a set of three plugins which provide quality of life utilities for working with fluorescence microscopy image stacks.
Normally the field of view recorded by the camera in the microscope is larger than the sample of interest and may contain several distinct samples.
Before beginning any significant data processing we would like to crop the captured data to a reasonable size.
The following three packages should make that process much easier and faster:

** channel split
This plugin takes a multichannel tif stack and splits the channels into distinct tif stacks.
These are automaticaly saved with appropriate names in the same folder as the original file.
Then the stacks have their contrast enhanced and they are recombined into an RGB stack which allows you to view the channels simultaneously.
Currently this plugin should be able to handle at least up to six channels although I haven't tested higher than that.
The RGB stack is *not* automatically saved.
It's main purpose is to be used in the subsequent package.
Also note that the original data is not modified by the contrast enhancement.
That is just temporary to ease the preprocessing.

** multi-select
This plugin takes a tif stack and displays the Z-projection (max).
It then enables the ROI manager which allows you to draw and add multiple rectangular regions of interest.
These can be added, modified and deleted manually in the ROI manager.

** multi-crop
This plugin takes the open ROIs in the ROI manager and applies them to any number of original datasets that you've selected.
Those stacks are then automatically cropped multiple times into the correct ROIs.
These are automatically saved in the same folder as the original file with a name ending in roi-x-y-w-h where x and y are the position and w and h are the width and height of the region of interest.
An overlay can also be saved manually for reference if desired.
Again, the raw data is not altered at all in this process.

* Installation
You can [[https://github.com/xcapaldi/imagej_noise-subtract][download the background subtraction source from Github]].
The source for the [[https://github.com/xcapaldi/imagej_multicrop][multi-crop utilities in in another repository]].

In Gnu/Linux and Windows, place the noise_subtract.py file inside the Fiji.app/plugins folder (or any subfolder).
In MacOSX go to the "Applications" folder in Finder, right-click on the Fiji icon and select "Show package contents" to find the plugins folder.

Then in Fiji go to Help -> Refresh Menus.
You will have to restart Fiji and then the plugin will appear in the Plugins menu.
